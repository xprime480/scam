
* Eventually this will be a Scheme interpreter fully compliant with R7RS

* Remove unneeded classes.

* Make ArgParser classes return something other than nullptr for failed
      parses.
  ** partially done -- still needs to be done when the return value
     is either a parser or a subtype of ScamExpr.

* Finish with the merge of branch arg-parse into arg-parse-2
  ** Then implement define-syntax

* Make ScamCharacter output be readable by reader for non-printable
  characters

* Make ScamString output be readable by reader

* Instead of single continuation, pass along a block that has at least
  a success and an error continuation.

* Remove class unit/TestHook.  Update:  Not sure how I imagined this
  to be done.  Tests still require it.

* Make all snake_case_variables into CamelCaseVariables

* The various WorkerData structures are probably an anti-pattern.
  Look at removing them.

* I think Undefine will be incorrect in the event of backtracking.  Should
  the form be redefined when backtracking?

* Validate that arguments to ScamClass::apply should not be evaluated
  twice.  The current code seems to mapEval once in the class and once in
  the instance.

* Can validateClosureArgs be refactored or eliminated somehow?

* "Parsers" should probably be renamed "Validators"
