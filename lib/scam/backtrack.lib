(import (only (scheme base)
              car
              cdr
              cons
              list?
              not
              null?)
        (only (scam base)
              filter
              member?))

(define (require x)
  (if x x (amb)))

(define (one-of lst)
  (begin
    (require (and (list? lst)
                  (not (null? lst))))
    (amb (car lst)
         (one-of (cdr lst)))))

(define (exclude vals lst)
  (if (null? lst)
      lst
      (let ((item (car lst))
            (tail (cdr lst)))
        (if (member? item vals)
            (exclude vals tail)
            (cons item (exclude vals tail))))))
