Mutation operations via string-set! or string-copy!

;[skip] uncomment to skip this test

[name]
Mutation operations on strings

[input]

(load "lib/test/test-handler.scm")

(define test-immutable "0123456789")
(define test-mutable (string-copy test-immutable))

;;;;0
(test-err-cat (string-set! :not-a-string 1 #\.))
(test-err-cat (string-set! test-mutable -1 #\.))
(test-err-cat (string-set! test-mutable 1 :not-char))
(test-err-cat (string-set! test-immutable 1 #\.))
(string-set! test-mutable 4 #\.)

;;;;;5
(test-err-cat (string-copy! test-immutable 0 "***"))
(string-copy! test-mutable 0 "***")
(string-copy! test-mutable 8 "abcdefgh" 0 1)
(string-copy! test-mutable 0 "abcdefgh" 0 0)
(test-err-cat (string-copy! test-mutable 9 "abcdefgh" 3))

;;;;;10
(test-err-cat (string-fill! test-immutable #\_))
(string-fill! test-mutable #\_ 8 10)
(string-fill! test-mutable #\+ 7)
(string-fill! test-mutable #\:)

;;;;;14
test-immutable
test-mutable

;;;;16

[result]
[keep 16]
:args
:args
:args
:args
"0123.56789"
:args
"***3.56789"
"***3.567a9"
"***3.567a9"
:args
"***3.567__"
"***3.56+++"
"::::::::::"
"0123456789"
"::::::::::"
