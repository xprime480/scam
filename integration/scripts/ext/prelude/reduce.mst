Reduce function

;[skip] uncomment to skip this test

[name]
Reduce

[input]

(load "lib/prelude.scm")
(define local-sum (lambda (a b) (+ a b)))

(reduce local-sum 0 '())
(reduce local-sum 0 '(5))
(reduce local-sum 0 '(1 2 3 4 5))
(reduce local-sum -10 '(1 2 3 4 5))

(reduce append '(#f) '((1 3) (2)))
(let ((f (lambda (l1 l2)
           (append l1 (list l2)))))
  (reduce f '((#t)) '((1 3) (2))))

[result]
[keep 6]
0
5
15
5
(#f 1 3 2)
((#t) (1 3) (2))
