Natural language processing example from Bill Hails.

;[skip]

[name]
Parse

[input]

(load "lib/prelude.scm")

(define verbs '(verb flies like))
(define nouns '(noun time fruit flies bannanna arrow))
(define determinants '(det a an))
(define adjectives '(adj time fruit))
(define prepositions '(prep like))

(define *unparsed* ())

(define parse
  (lambda (input)
    (begin
      (assign! *unparsed* input)
      (let ((sentence (parse-sentence)))
        (begin
          (require (nil? *unparsed*))
          sentence)))))

(define parse-word
  (lambda (words)
    (begin
      (require (cons? *unparsed*))
      (require (member? (car *unparsed*) (cdr words)))
      (let ((found-word (car *unparsed*)))
        (begin
          (assign! *unparsed* (cdr *unparsed*))
          (list (car words) found-word))))))

(define parse-sentence
  (lambda ()
    (list 'sentence
          (amb (parse-word nouns)
               (parse-noun-phrase))
          (parse-verb-phrase))))

(define parse-verb-phrase
  (lambda ()
    (list 'verb-phrase
          (parse-word verbs)
          (amb (parse-prep-phrase)
               (parse-noun-phrase)))))

(define parse-noun-phrase
  (lambda ()
    (list 'noun-phrase
          (amb (parse-word adjectives)
               (parse-word determinants))
          (parse-word nouns))))

(define parse-prep-phrase
  (lambda ()
    (list 'prep-phrase
          (parse-word prepositions)
          (parse-noun-phrase))))

(parse '(time flies like an arrow))
?

[result]
[keep 2]
(sentence (noun time) (verb-phrase (verb flies) (prep-phrase (prep like) (noun-phrase (det an) (noun arrow)))))
(sentence (noun-phrase (adj time) (noun flies)) (verb-phrase (verb like) (noun-phrase (det an) (noun arrow))))
