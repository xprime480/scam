Test operator % on integers

;[skip] uncomment to skip this test

[name]
Integer Modulus

[input]

(define check
  (lambda (val)
    (list val
          (rational? val)
          (integer? val)
          (exact? val))))

(check (%))
(check (% 2))
(check (% 7 2))
(check (% 7 2.0))
(check (% 77 44 0 0))  ;; this is an error in proper scheme!

[result]
[keep 5]
(0 #t #t #t)
(0 #t #t #t)
(1 #t #t #t)
(1 #t #t #f)
(33 #t #t #t)
