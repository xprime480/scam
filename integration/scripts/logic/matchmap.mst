Map a pattern over several data structures

;[skip]

[name]
Match Mapping

[input]

(load "lib/prelude.scm")

(define the-pattern #(:name 21))
(define the-data
  '(#("Mike" 58)
    #("Abby" 53)
    #("Morgan" 24)
    #("Connor" 21)))

(let ((age21 (lambda (dat)
               (match the-pattern dat))))
    (car (filter dict?
                 (map age21 the-data))))

[result]
[keep 1]
{ :name Connor }
