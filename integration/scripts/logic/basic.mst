Test the basic logic functions if, and, or, xor, not

;[skip]

[name]
Basic Logic

[input]

(load "lib/prelude.scm")

(list (if #t +1 -1)
      (if #f +1 -1)
      (if #f +1)
      (if #t (* 2 3) (/ 1 0)))

(if (/ 1 0) (* 2 3) (/ 1 0))
(if "strings are true" (/ 1 0))
(if #t)
(if #t 1 2 3 4 5 ())

(list (and)
      (and 3)
      (and #f)
      (and #t #t 3)
      (and #f (/ 1 0))
      (and 2 (and 3 4))
      (and (and 3 4) 2))

(list (or)
      (or 3)
      (or #f)
      (or #t #t 3)
      (or #t (/ 1 0))
      (or #f (or 3 4))
      (or (or #f #f) 2))

(list (not 3)
      (not #f))
(not)
(not #t #t 3)

(list (xor #t #f)
      (xor #f #t)
      (xor #t #t)
      (xor #f #f))


[result]
[keep 11]
(1 -1 () 6)
Division By Zero
Division By Zero
if expected "(test then-expr else-expr?)"; got "(#t)"
if expected "(test then-expr else-expr?)"; got "(#t 1 2 3 4 5 ())"
(#t 3 #f 3 #f 4 2)
(#f 3 #f #t #t 3 2)
(#f #t)
not expected "(form)"; got "()"
not expected "(form)"; got "(#t #t 3)"
(#t #t #f #f)
